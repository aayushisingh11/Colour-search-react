{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","term","setTerm","className","type","placeholder","value","onChange","e","target","filter","color","includes","map","index","console","log","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NA6CeA,MA1Cf,WACE,IAWA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,+CACA,uBACEC,KAAK,OACLC,YAAY,SACZC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAQM,EAAEC,OAAOH,UAEpC,6BAAKL,IACL,qBAAKE,UAAU,SAAf,SAvBW,CACb,MACA,QACA,MACA,OACA,SACA,SACA,QACA,SACA,SAgBOO,QAAO,SAACC,GAAD,OAAWA,EAAMC,SAASX,MACjCY,KAAI,SAACF,EAAOG,GAEX,OADAC,QAAQC,IAAIL,GAEV,qBACER,UAAU,WACVc,MAAO,CAAEC,gBAAiBP,IACrBG,YCxBNK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d2d1b3d1.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const colors = [\n    \"red\",\n    \"green\",\n    \"red\",\n    \"blue\",\n    \"purple\",\n    \"yellow\",\n    \"brown\",\n    \"purple\",\n    \"black\",\n  ];\n  const [term, setTerm] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <h1>Colour Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={term}\n        onChange={(e) => setTerm(e.target.value)}\n      />\n      <h1>{term}</h1>\n      <div className=\"colors\">\n        {colors\n          .filter((color) => color.includes(term))\n          .map((color, index) => {\n            console.log(color);\n            return (\n              <div\n                className=\"colorbox\"\n                style={{ backgroundColor: color }}\n                key={index}\n              ></div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}